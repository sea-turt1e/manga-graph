name: Neo4j AuraDB Keep-Alive (Safe)

on:
  schedule:
    - cron: '0 9 * * *' # ÊØéÊó•ÂçàÂâç9ÊôÇÔºàUTCÔºâ
  workflow_dispatch:

jobs:
  keepalive-safe:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Neo4j driver
      run: pip install neo4j
    
    - name: Simple Keep-Alive
      env:
        NEO4J_URI: ${{ secrets.NEO4J_URI }}
        NEO4J_USERNAME: ${{ secrets.NEO4J_USER }}
        NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      run: |
        python << 'EOF'
        from neo4j import GraphDatabase
        import os
        import sys
        
        def simple_keep_alive():
            uri = os.getenv('NEO4J_URI')
            username = os.getenv('NEO4J_USERNAME')
            password = os.getenv('NEO4J_PASSWORD')
            
            if not all([uri, username, password]):
                print("‚ùå Áí∞Â¢ÉÂ§âÊï∞„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì")
                sys.exit(1)
            
            try:
                driver = GraphDatabase.driver(uri, auth=(username, password))
                
                with driver.session() as session:
                    # ÊúÄ„ÇÇ„Ç∑„É≥„Éó„É´„Å™„ÇØ„Ç®„É™„ÅßKeep-Alive
                    result = session.run("RETURN 'Neo4j AuraDB Keep-Alive OK' AS message, datetime() AS timestamp")
                    record = result.single()
                    
                    print("‚úÖ Neo4j AuraDB Keep-AliveÊàêÂäü!")
                    print(f"üìù „É°„ÉÉ„Çª„Éº„Ç∏: {record['message']}")
                    print(f"üïê ÊôÇÂàª: {record['timestamp']}")
                
                driver.close()
                print("‚úÖ Êé•Á∂ö„ÇíÊ≠£Â∏∏„Å´ÁµÇ‰∫Ü„Åó„Åæ„Åó„Åü")
                
            except Exception as e:
                print(f"‚ùå „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: {e}")
                sys.exit(1)
        
        simple_keep_alive()
        EOF
